[global_tags]
  device = "austin"
  role = "leaf"

[agent]
  interval = "10s"
  debug = true

[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["stdout"]
  data_format = "influx"

[[outputs.prometheus_client]]
  listen = ":9002"

[[inputs.cisco_telemetry_gnmi]]
    addresses = ["austin.nanog-77.ntc.cloud.tesuto.com:50000"]
    username = "tesutocli"
    password = "xxxxx"

    ## redial in case of failures after
    redial = "10s"
    tagexclude = ["openconfig-network-instance:/network-instances/network-instance/protocols/protocol/name"]

    [[inputs.cisco_telemetry_gnmi.subscription]]
        origin = "openconfig-interfaces"
        path = "/interfaces/interface"

        # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
        subscription_mode = "sample"

        sample_interval = "10s"
        heartbeat_interval = "60s"

    [[inputs.cisco_telemetry_gnmi.subscription]]
        name = "bgp_neighbor"
        origin = "openconfig-network-instance"
        path = "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state"

        # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
        subscription_mode = "sample"
        sample_interval = "10s"


[[processors.enum]]
  [[processors.enum.mapping]]
    field = "session_state"

    [processors.enum.mapping.value_mappings]
      ESTABLISHED = 1
      ACTIVE = 2
      CONNECT = 3
      IDLE = 4

[[processors.enum]]
  [[processors.enum.mapping]]
    field = "state/oper_status"
    [processors.enum.mapping.value_mappings]
      UP = 1
      DOWN = 2

  [[processors.enum.mapping]]
    field = "state/admin_status"
    [processors.enum.mapping.value_mappings]
      UP = 1
      DOWN = 2


[[processors.regex]]
  namepass = ["interface"]

  [[processors.regex.tags]]
    key = "name"
    pattern = "^Ethernet1$"
    replacement = "uplink"
    result_key = "intf_role"

  [[processors.regex.tags]]
    key = "name"
    pattern = "^Ethernet4$"
    replacement = "uplink"
    result_key = "intf_role"

  [[processors.regex.tags]]
    key = "name"
    pattern = "^Ethernet3$"
    replacement = "server"
    result_key = "intf_role"

