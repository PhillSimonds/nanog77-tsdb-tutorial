

[global_tags]
  device = "{{item}}"
  role = "{{hostvars[item].role}}"

[agent]
  interval = "10s"
  debug = true

[[outputs.prometheus_client]]
  listen = ":{{hostvars[item].gnmi_port_telegraf}}"

[[inputs.cisco_telemetry_gnmi]]
    addresses = ["{{hostvars[item].ansible_host}}:{{hostvars[item].gnmi_port_local}}"]
    username = "{{hostvars[item].ansible_user}}"
    password = "{{hostvars[item].ansible_password}}"

    ## redial in case of failures after
    redial = "10s"
    tagexclude = ["openconfig-network-instance:/network-instances/network-instance/protocols/protocol/name"]

    [[inputs.cisco_telemetry_gnmi.subscription]]
        origin = "openconfig-interfaces"
        path = "/interfaces/interface"

        # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
        subscription_mode = "{{hostvars[item].gnmi_subscription_mode}}"
        
        sample_interval = "10s"

{% if hostvars[item].platform == "iosxr" %}
    [[inputs.cisco_telemetry_gnmi.subscription]]
        name = "bgp_neighbor"
        origin = "openconfig-network-instance"
        path = "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state"

        # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
        subscription_mode = "sample"
        sample_interval = "10s"

{% endif %}

[[processors.enum]]
  [[processors.enum.mapping]]
    ## Name of the field to map
    field = "session_state"

    [processors.enum.mapping.value_mappings]
      ESTABLISHED = 1
      ACTIVE = 2
      CONNECT = 3
      IDLE = 4

{% if add_interface_role is defined and add_interface_role %}
{%  include 'telegraf_gnmi_intf_role.j2' %}
{% endif %}